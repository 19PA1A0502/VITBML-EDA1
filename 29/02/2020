{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled4.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyNpWfVDflnGZiKzglJceWeG",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/19PA1A0502/VITBML-EDA1/blob/master/29/02/2020\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zq-12rV8XZ9l",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tlurv0ucpS4S",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "F3Q8Eu5ii5sn",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "855c5d6f-8e82-457a-b7e3-1f21173bdb87"
      },
      "source": [
        "pp=pd.read_csv('tableconvert_2020-02-29_111626.csv')\n",
        "pp"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sepal_length</th>\n",
              "      <th>sepal_width</th>\n",
              "      <th>petal_length</th>\n",
              "      <th>petal_width</th>\n",
              "      <th>species</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>6.7</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2.3</td>\n",
              "      <td>virginica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>6.3</td>\n",
              "      <td>2.5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>virginica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>6.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>virginica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>6.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.3</td>\n",
              "      <td>virginica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>5.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1.8</td>\n",
              "      <td>virginica</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>150 rows Ã— 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     sepal_length  sepal_width  petal_length  petal_width    species\n",
              "0             5.1          3.5           1.4          0.2     setosa\n",
              "1             4.9          3.0           1.4          0.2     setosa\n",
              "2             4.7          3.2           1.3          0.2     setosa\n",
              "3             4.6          3.1           1.5          0.2     setosa\n",
              "4             5.0          3.6           1.4          0.2     setosa\n",
              "..            ...          ...           ...          ...        ...\n",
              "145           6.7          3.0           5.2          2.3  virginica\n",
              "146           6.3          2.5           5.0          1.9  virginica\n",
              "147           6.5          3.0           5.2          2.0  virginica\n",
              "148           6.2          3.4           5.4          2.3  virginica\n",
              "149           5.9          3.0           5.1          1.8  virginica\n",
              "\n",
              "[150 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eQPIm9S-pXMp",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "apbzx6nvqji0",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D3hvckKgqkdk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iUcoJuxKiOEX",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "fd9d112b-0a14-4073-a06d-9e9bb3d7f347"
      },
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "x=pp['sepal_length']\n",
        "y=pp['petal_length']\n",
        "plt.scatter(x,y)\n",
        "plt.show()\n"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FNoNMnHSqx1T",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4ff501a5-70c0-433e-c9d0-23f95b03482d"
      },
      "source": [
        "import numpy as np\n",
        "group=pp.groupby('species')\n",
        "x=group.agg(np.mean)\n",
        "y=x['sepal_length'].max()\n",
        "y"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6.587999999999998"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aa1bO0Nrmx-m",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "d2409566-6f16-4224-c4d7-3c3012c13f67"
      },
      "source": [
        "z=pp['petal_width']\n",
        "plt.hist(z)\n",
        "plt.show()"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EDzrylWzsvqu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "outputId": "1c733905-fdcf-4938-b761-f14033c10925"
      },
      "source": [
        "cse=pd.DataFrame([[70,37,66],[75,73,77],[72,77,88],[68,66,88],[52,43,95],[48,44,99],[65,44,93],[43,55,88],[89,63,95],[95,40,45]])\n",
        "cse"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>70</td>\n",
              "      <td>37</td>\n",
              "      <td>66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>75</td>\n",
              "      <td>73</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>72</td>\n",
              "      <td>77</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>68</td>\n",
              "      <td>66</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>52</td>\n",
              "      <td>43</td>\n",
              "      <td>95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>48</td>\n",
              "      <td>44</td>\n",
              "      <td>99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>65</td>\n",
              "      <td>44</td>\n",
              "      <td>93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>43</td>\n",
              "      <td>55</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>89</td>\n",
              "      <td>63</td>\n",
              "      <td>95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>95</td>\n",
              "      <td>40</td>\n",
              "      <td>45</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    0   1   2\n",
              "0  70  37  66\n",
              "1  75  73  77\n",
              "2  72  77  88\n",
              "3  68  66  88\n",
              "4  52  43  95\n",
              "5  48  44  99\n",
              "6  65  44  93\n",
              "7  43  55  88\n",
              "8  89  63  95\n",
              "9  95  40  45"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DRpEMauCt28k",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "outputId": "0604e773-7873-46be-906a-b05bf3316f71"
      },
      "source": [
        "cse.boxplot()"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc3068bf9e8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ytoOpnTguZ_i",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "outputId": "7450b205-e538-46ce-f0ef-a7b1626ba0ed"
      },
      "source": [
        "pp=pd.read_csv('students_placement_data.csv')\n",
        "pp"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Roll No</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Section</th>\n",
              "      <th>SSC Percentage</th>\n",
              "      <th>inter_Diploma_percentage</th>\n",
              "      <th>B.Tech_percentage</th>\n",
              "      <th>Backlogs</th>\n",
              "      <th>registered_for_ Placement_Training</th>\n",
              "      <th>placement status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>A</td>\n",
              "      <td>87.3</td>\n",
              "      <td>65.30</td>\n",
              "      <td>40.00</td>\n",
              "      <td>18</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>A</td>\n",
              "      <td>89.0</td>\n",
              "      <td>92.40</td>\n",
              "      <td>71.45</td>\n",
              "      <td>0</td>\n",
              "      <td>yes</td>\n",
              "      <td>Placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>A</td>\n",
              "      <td>67.0</td>\n",
              "      <td>68.00</td>\n",
              "      <td>45.26</td>\n",
              "      <td>13</td>\n",
              "      <td>yes</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>A</td>\n",
              "      <td>71.0</td>\n",
              "      <td>70.40</td>\n",
              "      <td>36.47</td>\n",
              "      <td>17</td>\n",
              "      <td>yes</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>M</td>\n",
              "      <td>A</td>\n",
              "      <td>67.0</td>\n",
              "      <td>65.50</td>\n",
              "      <td>42.52</td>\n",
              "      <td>17</td>\n",
              "      <td>yes</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>113</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>81.1</td>\n",
              "      <td>78.60</td>\n",
              "      <td>35.84</td>\n",
              "      <td>16</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>114</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>81.3</td>\n",
              "      <td>85.12</td>\n",
              "      <td>68.50</td>\n",
              "      <td>0</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>115</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>83.5</td>\n",
              "      <td>89.90</td>\n",
              "      <td>76.30</td>\n",
              "      <td>0</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>116</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>85.5</td>\n",
              "      <td>90.63</td>\n",
              "      <td>74.50</td>\n",
              "      <td>0</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>117</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>80.0</td>\n",
              "      <td>83.33</td>\n",
              "      <td>65.53</td>\n",
              "      <td>0</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>117 rows Ã— 9 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     Roll No Gender  ... registered_for_ Placement_Training  placement status\n",
              "0          1      M  ...                                 NO        Not placed\n",
              "1          2      F  ...                                yes            Placed\n",
              "2          3      F  ...                                yes        Not placed\n",
              "3          4      M  ...                                yes        Not placed\n",
              "4          5      M  ...                                yes        Not placed\n",
              "..       ...    ...  ...                                ...               ...\n",
              "112      113      M  ...                                 NO        Not placed\n",
              "113      114      M  ...                                 NO        Not placed\n",
              "114      115      M  ...                                 NO        Not placed\n",
              "115      116      M  ...                                 NO        Not placed\n",
              "116      117      M  ...                                 NO        Not placed\n",
              "\n",
              "[117 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s4kSnnZAu7H1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qyacCaxdxc7c",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "2fdb1d0c-aef7-4957-aac3-9bd460e8f428"
      },
      "source": [
        "import numpy as np\n",
        "group=pp.groupby('Gender')\n",
        "x=group.agg(np.mean)\n",
        "y=x['B.Tech_percentage'].max()\n",
        "y"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "71.19938775510205"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    }
  ]
}